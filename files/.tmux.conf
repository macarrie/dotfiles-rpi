# vim: set syntax=sh:

# Change default prefix
unbind C-b
set-option -g prefix C-x
bind-key C-x send-prefix

# Window resizing
set -g aggressive-resize

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 2 seconds
set -g display-time 2000

# start with window 0 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# screen mode
set -g default-terminal "screen-256color"

# source config file
bind r source-file ~/.tmux.conf\; display-message "Config reloaded"

# Status line setup
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-justify left
set -g status-right-length "100"
set -g status-left-length "100"
set -g status-bg colour234
set -g status-fg colour250
set -g status-left '#[bg=colour250,fg=colour234,bold] #S #[bg=default,fg=colour250,nobold]'
set -g status-right '#[fg=colour244]#(uptime | rev | cut -d: -f 1 | rev | sed 's/,//g') #[fg=colour236]#[bg=colour236,fg=colour250] %a %d %b %Y  %H:%M #[bg=colour236,fg=colour250]#[bg=colour250,fg=colour234,bold] #(whoami)@#H '
setw -g window-status-format "#[bg=colour236,fg=colour234] #[bg=colour236,fg=colour250]#I#F  #W #[bg=colour234,fg=colour236]"
setw -g window-status-current-format "#[bg=colour27,fg=colour234] #[bg=colour27,fg=colour254]#I#F  #W  #{pane_current_path} #[bg=colour234,fg=colour27]"
set -g pane-active-border-fg colour39
set -g pane-active-border-bg default

# don't rename windows automatically
set-option -g allow-rename off

# Window navigation
bind-key bspace last-window

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Turn on vi bindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Navigate between panes vi style
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind key for synchronizing panes
bind-key y set-window-option synchronize-panes

# Mouse support
set-option -g mouse on

# Copy mode
bind C-c copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'
bind-key C-v paste-buffer
